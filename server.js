const Discord = require("discord.js");
const client = new Discord.Client();
const ayarlar = require("./ayarlar.json");
const chalk = require("chalk");
const moment = require("moment");
var Jimp = require("jimp");
const { Client, Util } = require("discord.js");
const weather = require("weather-js");
const fs = require("fs");
const canvas = require("canvas");
const db = require("quick.db");
const http = require("http");
const express = require("express");
require("./util/eventLoader")(client);

const app = express();
app.get("/", (request, response) => {
  console.log(Date.now() + " Ping tamamdÄ±r.");
  response.sendStatus(200);
});
app.listen(process.env.PORT);
setInterval(() => {
  http.get(`http://${process.env.PROJECT_DOMAIN}.glitch.me/`);
}, 280000);

var prefix = ayarlar.prefix;

const log = message => {
  console.log(`${message}`);
};

client.commands = new Discord.Collection();
client.aliases = new Discord.Collection();
fs.readdir("./komutlar/", (err, files) => {
  if (err) console.error(err);
  log(`${files.length} komut yÃ¼klenecek.`);
  files.forEach(f => {
    let props = require(`./komutlar/${f}`);
    log(`YÃ¼klenen komut: ${props.help.name}.`);
    client.commands.set(props.help.name, props);
    props.conf.aliases.forEach(alias => {
      client.aliases.set(alias, props.help.name);
    });
  });
});

client.reload = command => {
  return new Promise((resolve, reject) => {
    try {
      delete require.cache[require.resolve(`./komutlar/${command}`)];
      let cmd = require(`./komutlar/${command}`);
      client.commands.delete(command);
      client.aliases.forEach((cmd, alias) => {
        if (cmd === command) client.aliases.delete(alias);
      });
      client.commands.set(command, cmd);
      cmd.conf.aliases.forEach(alias => {
        client.aliases.set(alias, cmd.help.name);
      });
      resolve();
    } catch (e) {
      reject(e);
    }
  });
};

client.load = command => {
  return new Promise((resolve, reject) => {
    try {
      let cmd = require(`./komutlar/${command}`);
      client.commands.set(command, cmd);
      cmd.conf.aliases.forEach(alias => {
        client.aliases.set(alias, cmd.help.name);
      });
      resolve();
    } catch (e) {
      reject(e);
    }
  });
};

client.unload = command => {
  return new Promise((resolve, reject) => {
    try {
      delete require.cache[require.resolve(`./komutlar/${command}`)];
      let cmd = require(`./komutlar/${command}`);
      client.commands.delete(command);
      client.aliases.forEach((cmd, alias) => {
        if (cmd === command) client.aliases.delete(alias);
      });
      resolve();
    } catch (e) {
      reject(e);
    }
  });
};

client.elevation = message => {
  if (!message.guild) {
    return;
  }
  let permlvl = 0;
  if (message.member.hasPermission("BAN_MEMBERS")) permlvl = 2;
  if (message.member.hasPermission("ADMINISTRATOR")) permlvl = 3;
  if (message.author.id === ayarlar.sahip) permlvl = 4;
  return permlvl;
};

var regToken = /[\w\d]{24}\.[\w\d]{6}\.[\w\d-_]{27}/g;
// client.on('debug', e => {
//   console.log(chalk.bgBlue.green(e.replace(regToken, 'that was redacted')));
// });

client.on("warn", e => {
  console.log(chalk.bgYellow(e.replace(regToken, "that was redacted")));
});

client.on("error", e => {
  console.log(chalk.bgRed(e.replace(regToken, "that was redacted")));
});

client.login(process.env.token);
///////////gÃ¼naydÄ±n-iyiakÅŸamlar//////
client.on("message", message => {
  if (message.content.toLowerCase() == "gÃ¼naydÄ±n")
    return message.channel.send(`${message.author}, Sanada GÃ¼naydÄ±n.`);
});
client.on("message", message => {
  if (message.content.toLowerCase() == "iyi akÅŸamlar")
    return message.channel.send(`${message.author}, Sanada Ä°yi AkÅŸamlar.`);
});
client.on("ready", () => {
  client.channels.cache.get("833581595465744404").join();
});
client.on("ready", () => {
  client.channels.cache.get("835311786953146378").join();
});

/////sa-as////
client.on("message", async msg => {
  const i = await db.fetch(`ssaass_${msg.guild.id}`);
  if (i == "acik") {
    if (
      msg.content.toLowerCase() == "sa" ||
      msg.content.toLowerCase() == "s.a" ||
      msg.content.toLowerCase() == "selamun aleykÃ¼m" ||
      msg.content.toLowerCase() == "sea" ||
      msg.content.toLowerCase() == "selam"
    ) {
      try {
        return msg.reply("AleykÃ¼m Selam, HoÅŸgeldin.");
      } catch (err) {
        console.log(err);
      }
    }
  } else if (i == "kapali") {
  }
  if (!i) return;
});
///sayaÃ§///
client.commands = new Discord.Collection();
client.aliases = new Discord.Collection();
fs.readdir("./komutlar/", (err, files) => {
  if (err) console.error(err);
  log(`${files.length} komut yÃ¼klenecek.`);
  files.forEach(f => {
    let props = require(`./komutlar/${f}`);
    log(`YÃ¼klenen komut: ${props.help.name}.`);
    client.commands.set(props.help.name, props);
    props.conf.aliases.forEach(alias => {
      client.aliases.set(alias, props.help.name);
    });
  });
});

client.reload = command => {
  return new Promise((resolve, reject) => {
    try {
      delete require.cache[require.resolve(`./komutlar/${command}`)];
      let cmd = require(`./komutlar/${command}`);
      client.commands.delete(command);
      client.aliases.forEach((cmd, alias) => {
        if (cmd === command) client.aliases.delete(alias);
      });
      client.commands.set(command, cmd);
      cmd.conf.aliases.forEach(alias => {
        client.aliases.set(alias, cmd.help.name);
      });
      resolve();
    } catch (e) {
      reject(e);
    }
  });
};

client.load = command => {
  return new Promise((resolve, reject) => {
    try {
      let cmd = require(`./komutlar/${command}`);
      client.commands.set(command, cmd);
      cmd.conf.aliases.forEach(alias => {
        client.aliases.set(alias, cmd.help.name);
      });
      resolve();
    } catch (e) {
      reject(e);
    }
  });
};

client.unload = command => {
  return new Promise((resolve, reject) => {
    try {
      delete require.cache[require.resolve(`./komutlar/${command}`)];
      let cmd = require(`./komutlar/${command}`);
      client.commands.delete(command);
      client.aliases.forEach((cmd, alias) => {
        if (cmd === command) client.aliases.delete(alias);
      });
      resolve();
    } catch (e) {
      reject(e);
    }
  });
};

client.elevation = message => {
  if (!message.guild) {
    return;
  }
  let permlvl = 0;
  if (message.member.hasPermission("BAN_MEMBERS")) permlvl = 2;
  if (message.member.hasPermission("ADMINISTRATOR")) permlvl = 3;
  if (message.author.id === ayarlar.sahip) permlvl = 4;
  return permlvl;
};

client.on("guildMemberRemove", async member => {
  const channel = db.fetch(`sayaÃ§Kanal_${member.guild.id}`);
  if (db.has(`sayacsayÄ±_${member.guild.id}`) == false) return;
  if (db.has(`sayaÃ§Kanal_${member.guild.id}`) == false) return;

  member.guild.channels.cache
    .get(channel)
    .send(
      `ðŸ“¤ **${member.user.tag}** Sunucudan ayrÄ±ldÄ±! \`${db.fetch(
        `sayacsayÄ±_${member.guild.id}`
      )}\` Ã¼ye olmamÄ±za son \`${db.fetch(`sayacsayÄ±_${member.guild.id}`) -
        member.guild.memberCount}\` Ã¼ye kaldÄ±!`
    );
});
client.on("guildMemberAdd", async member => {
  const channel = db.fetch(`sayaÃ§Kanal_${member.guild.id}`);
  if (db.has(`sayacsayÄ±_${member.guild.id}`) == false) return;
  if (db.has(`sayaÃ§Kanal_${member.guild.id}`) == false) return;

  member.guild.channels.cache
    .get(channel)
    .send(
      `ðŸ“¥ **${member.user.tag}** Sunucuya KatÄ±ldÄ±! \`${db.fetch(
        `sayacsayÄ±_${member.guild.id}`
      )}\` Ã¼ye olmamÄ±za son \`${db.fetch(`sayacsayÄ±_${member.guild.id}`) -
        member.guild.memberCount}\` Ã¼ye kaldÄ±!`
    );
});
//-------------Bot Eklenince Bir Kanala Mesaj GÃ¶nderme Komutu ---------------\\
const emmmmbed = new Discord.MessageEmbed()
  .setThumbnail()
  .setImage(
    "https://cdn.discordapp.com/attachments/829730546527502407/832179789213335592/standard.gif"
  )
  .addField(
    `Kuty  | TeÅŸekkÃ¼rler`,
    `**Selamlar, Ben Kuty  (Kuty Bot'un GeliÅŸtiricisi) Ã–ncelikle Botumuzu EklediÄŸiniz ve Bize Destek OlduÄŸunuz Ä°Ã§in Sizlere TeÅŸekkÃ¼rlerimi SunarÄ±m**`
  )
  .addField(
    `Kuty | NasÄ±l KullanÄ±lÄ±r?`,
    `**Kuty botun tÃ¼m Ã¶zelliklerinden yararlanabilmek iÃ§in sadece \`!!yardÄ±m\` yazmanÄ±z yeterlidir.**`
  )
  .addField(
    `Kuty | Linkler`,
    `**Sohbet KanalÄ±na !!davet YazmanÄ±z Yeterlidir**`
  )
  .setFooter(`Kuty | GeliÅŸmiÅŸ TÃ¼rkÃ§e Bot | 2021`)
  .setTimestamp();

client.on("guildCreate", guild => {
  let defaultChannel = "";
  guild.channels.cache.forEach(channel => {
    if (channel.type == "text" && defaultChannel == "") {
      if (channel.permissionsFor(guild.me).has("SEND_MESSAGES")) {
        defaultChannel = channel;
      }
    }
  });

  defaultChannel.send(emmmmbed);
});
/////eklendim-atÄ±ldÄ±m////
client.on('guildDelete', guild => {

let Logic = new Discord.MessageEmbed()

.setColor("RANDOM")
.setTitle(" Bot Kicklendi ")
.addField("Sunucu AdÄ±:", guild.name)
.addField("Sunucu sahibi", guild.owner)
.addField("Sunucu Sahibi'nin ID'si", guild.ownerID)
.addField("Sunucunun Kurulu OlduÄŸu BÃ¶lge:", guild.region)
.addField("Sunucudaki KiÅŸi SayÄ±sÄ±:", guild.memberCount)

   client.channels.cache.get('833581939486752798').send(Logic);
 
});

//--------------------------------------------------------//

client.on('guildCreate', guild => {

let Logic = new Discord.MessageEmbed()

.setColor("RANDOM")
.setTitle(" Bot Eklendi ")
.addField("Sunucu AdÄ±:", guild.name)
.addField("Sunucu sahibi", guild.owner)
.addField("Sunucu Sahibi'nin ID'si", guild.ownerID)
.addField("Sunucunun Kurulu OlduÄŸu BÃ¶lge:", guild.region)
.addField("Sunucudaki KiÅŸi SayÄ±sÄ±:", guild.memberCount)

   client.channels.cache.get('833581939486752798').send(Logic);

}); //Windly
////oto-rol///
client.on("guildMemberAdd", async member => {

  let kanal = await db.fetch(`otorolkanal_${member.guild.id}`);
  let rol = await db.fetch(`otorolrol_${member.guild.id}`);

  if (!kanal) return;
  if (!rol) return;

  let user = client.users.cache.get(member.id);

  client.channels.cache.get(kanal).send(
  new Discord.MessageEmbed()
  .setColor("BLUE")
  .setTitle(`${client.user.username} | **Oto Rol Sistemi**`)
  .setTimestamp()
  .setThumbnail(user.avatarURL({ dynamic: true, format: "png", size: 1024 }))
  .setDescription(`Sunucuya HoÅŸgeldin **${member}** **${rol}** adlÄ± rolun verÄ±ldÄ± (${member.user.tag})`))
  
  member.roles.add(rol)
});
//AYARLAMALI-HG-BB---------//
client.on("guildMemberAdd", async member => {
  var rahzamember = `<@${member.id}>`
  var rahzam = await db.fetch(`hgmesaj_${member.guild.id}`)
  let user = client.users.cache.get(member.id);
  let kullanÄ±cÄ± = client.users.cache.get(member.id)
  const hesap = new Date().getTime()- kullanÄ±cÄ±.createdAt.getTime();
  let durum;
  if (hesap < 1296000000) durum = 'ÅžÃ¼pheli'
  if (hesap > 1296000000) durum = 'GÃ¼venli'
  if(!rahzam) return;
    const embed = new Discord.MessageEmbed()
    .setTitle('Birisi Sunucumuza KatÄ±ldÄ±!')
    .setDescription(`
    
    
      ${rahzamember} Sunucuya katÄ±ldÄ±!
    
      Senle Beraber **${member.guild.memberCount}** KiÅŸiyiz :slight_smile:
      
      GÃ¼venlik Durumu : **${durum}**
    
      HesabÄ±nÄ±n KuruluÅŸ Tarihi:   ${moment(member.user.createdAt).format("**DD MMMM YYYY**") }
  
    
    `)
    .setThumbnail(member.user.displayAvatarURL({ dynamic: true }))
    .setImage('https://cdn.discordapp.com/attachments/830859792242442300/832173414453084160/HG_BB_Katld.png')
    .setAuthor(member.guild.name,member.guild.iconURL({dynamic:true}))
    .setTimestamp()
    .setColor("#2f3136")
    client.channels.cache.get(rahzam).send(embed);
  })
client.on("guildMemberRemove", async member => {
  var rahzamember = `<@${member.id}>`
  var rahzam = await db.fetch(`hgmesaj_${member.guild.id}`)
  let user = client.users.cache.get(member.id);
  let kullanÄ±cÄ± = client.users.cache.get(member.id)
  const hesap = new Date().getTime()- kullanÄ±cÄ±.createdAt.getTime();
  let durum;
  if (hesap < 1296000000) durum = 'ÅžÃ¼pheli'
  if (hesap > 1296000000) durum = 'GÃ¼venli'
  if(!rahzam) return;
    const embed = new Discord.MessageEmbed()
    .setTitle('Birisi Sunucumuza AyrÄ±ldÄ±!')
    .setDescription(`
    
    
      ${rahzamember} Sunucuya AyrÄ±ldÄ±!
    
      Sensiz Maalesef **${member.guild.memberCount}** KiÅŸiyiz :slight_frown:
      
      GÃ¼venlik Durumu : **${durum}**
    
      HesabÄ±nÄ±n KuruluÅŸ Tarihi:   ${moment(member.user.createdAt).format("**DD MMMM YYYY**") }
  
    
    `)
    .setThumbnail(member.user.displayAvatarURL({ dynamic: true }))
    .setImage('https://cdn.discordapp.com/attachments/830859792242442300/832173410074230794/HG_BB_Ayrld.png')
    .setAuthor(member.guild.name,member.guild.iconURL({dynamic:true}))
    .setTimestamp()
    .setColor("#2f3136")
    client.channels.cache.get(rahzam).send(embed);
  })
/////eklenince sunucu sahibine mesaj gnderme ///
client.on("guildCreate", guild => {
  let rahzam = guild.owner
const eembeed = new Discord.MessageEmbed()
.setTitle(`Selam Beni Sunucunuza EklediÄŸiniz iÃ§in teÅŸekkÃ¼rler Bir Sorun Olursa Destek Sunucuma Gelmeyi Unutma`)
.setColor("#d028f4")
.setDescription(`Komutlar ulaÅŸmak iÃ§in ${ayarlar.prefix}yardÄ±m, tercih ettiÄŸiniz iÃ§in tÅŸk`)
.addField('Prefixim', ayarlar.prefix)
.addField(`Destek Sunucusu`, `https://discord.gg/X5vTCzWXe4`)
rahzam.send(eembeed)
});
////seviye-v12////
client.cooldown = new Discord.Collection();
client.config = {
cooldown: 1 * 1000
}
client.db = require("quick.db");
client.on("message", async (message) => {
    if (!message.guild || message.author.bot) return;
    // XP
    exp(message);
function exp(message) {
    if (!client.cooldown.has(`${message.author.id}`) || (Date.now() - client.cooldown.get(`${message.author.id}`) > client.config.cooldown)) {
        let exp = client.db.add(`exp_${message.author.id}`, 1);
        let level = Math.floor(0.3 * Math.sqrt(exp));
        let lvl = client.db.get(`level_${message.author.id}`) || client.db.set(`level_${message.author.id}`,1);;
        if (level > lvl) {
            let newLevel = client.db.set(`level_${message.author.id}`,level);
            message.channel.send(`:tada: ${message.author.toString()}, Level atladÄ±n yeni levelin ${newLevel}!`);
        }
        client.cooldown.set(`${message.author.id}`, Date.now());
    }
}
});
///////////////////////////
